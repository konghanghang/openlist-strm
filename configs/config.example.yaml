# OpenList-STRM Configuration Example

# Server configuration
server:
  host: "0.0.0.0"
  port: 8080

# Alist configuration
alist:
  url: "http://localhost:5244"
  token: "your-alist-token-here"
  sign_enabled: false
  timeout: 30  # seconds

# Note: Path mappings are now managed via Web UI and stored in database
# Use the Web UI (http://localhost:8080) to create and manage your mappings

# Note: Schedule tasks are now configured per-mapping in Web UI
# Each mapping can have its own cron expression for automatic execution

# API configuration
api:
  enabled: true
  token: ""  # Optional: set API token for authentication
  timeout: 300  # seconds

# Web UI configuration
web:
  enabled: true
  username: "admin"  # Not used in current version
  password: "admin123"  # Not used in current version

# Logging configuration
log:
  level: "info"  # debug, info, warn, error
  file: ""  # Empty string outputs to stdout (recommended for Docker)
            # Set to "./logs/openlist-strm.log" for file logging
  max_size: 100  # MB
  max_backups: 3

# Database configuration
database:
  path: "./data/openlist-strm.db"

# Media Server Notification
media_server:
  enabled: false  # 是否启用媒体服务器通知
  type: "emby"  # 媒体服务器类型: emby, jellyfin, both

  # Emby 配置
  emby:
    url: ""  # Emby 服务器地址，例如: http://emby:8096
    api_key: ""  # Emby API Key
    scan_mode: "full"  # 扫描模式: full=全库扫描, path=路径扫描
    # 路径映射配置（仅在 scan_mode=path 时需要）
    path_mapping:
      # OpenList-STRM 容器路径 -> Emby 容器路径
      # "/data/strm": "/media/movies"

  # Jellyfin 配置
  jellyfin:
    url: ""  # Jellyfin 服务器地址，例如: http://jellyfin:8096
    api_key: ""  # Jellyfin API Key
    scan_mode: "full"  # 扫描模式: full=全库扫描, path=路径扫描
    # 路径映射配置（仅在 scan_mode=path 时需要）
    path_mapping:
      # OpenList-STRM 容器路径 -> Jellyfin 容器路径
      # "/data/strm": "/media/movies"
